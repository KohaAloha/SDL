=pod

=head1 NAME

SDL::Mixer::Samples - functions for loading sound samples

=head1 CATEGORY

Mixer

=head1 DESCRIPTION

=head1 METHODS

=head2 int 
mixsam_get_num_chunk_decoders ()
	CODE:
		RETVAL = Mix_GetNumChunkDecoders();
	OUTPUT:
		RETVAL

char* 
mixsam_get_chunk_decoder (idecoder)
	int idecoder
	CODE:
		RETVAL = (char *)Mix_GetChunkDecoder(idecoder);
	OUTPUT:
		RETVAL

#endif


Mix_Chunk *
mixsam_load_WAV ( filename )
	char *filename
	PREINIT:
		char * CLASS = "SDL::Mixer::MixChunk";
	CODE:
		Mix_Chunk * mixchunk;
		mixchunk = Mix_LoadWAV(filename);
		RETVAL = mixchunk;
	OUTPUT:
		RETVAL


Mix_Chunk *
mixsam_load_WAV_RW ( src, freesrc)
	SDL_RWops * src
	int freesrc
	PREINIT:
		char * CLASS = "SDL::Mixer::MixChunk";
	CODE:
		Mix_Chunk * mixchunk;
		mixchunk = Mix_LoadWAV_RW(src, freesrc);
		RETVAL = mixchunk;
	OUTPUT:
		RETVAL


Mix_Chunk *
mixsam_quick_load_WAV ( buf )
	Uint8 *buf
	PREINIT:
		char * CLASS = "SDL::Mixer::MixChunk";
	CODE:
		RETVAL = Mix_QuickLoad_WAV(buf);
	OUTPUT:
		RETVAL


Mix_Chunk *
mixsam_quick_load_RAW ( buf , len)
	Uint8 *buf
	int len
	PREINIT:
		char * CLASS = "SDL::Mixer::MixChunk";
	CODE:
		RETVAL = Mix_QuickLoad_RAW( buf, len );
	OUTPUT:
		RETVAL


int
mixsam_volume_chunk ( chunk, volume )
	Mix_Chunk *chunk
	int volume
	CODE:
		RETVAL = Mix_VolumeChunk(chunk,volume);
	OUTPUT:
		RETVAL


void
mixsam_free_chunk( chunk )
	Mix_Chunk *chunk
	CODE:
		Mix_FreeChunk(chunk);

=cut
