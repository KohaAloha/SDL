
=pod

=head1 NAME

SDLx::App - The root window of an SDL application

=head1 CATEGORY

Extension

=head1 SYNOPSIS

 use SDL;
 use SDLx::App;
 use SDL::Event;
 use SDL::Events;

 # this is all the code we need to have a working app!
 my $app = SDLx::App->new;

 # we can also specify many useful things in the constructor
 my $app = SDLx::App->new(
     title      => 'My Great Game',
     width      => 1024,
     height     => 600,
     centered   => 1,
     no_frame   => 1,
     async_blit => 1,
 );

 # our app also comes with an SDLx::Controller

 # add a handler handle events such as keypresses
 $app->add_event_handler(
     sub {
          my ($event) = @_;
          # handle the event here
     }
 );

 # add a handler to move our objects in response to time
 $app->add_move_handler(
     sub {
         # handle moving objects here
     }
 );

 # add a handler to show our objects on the screen
 $app->add_show_handler(
     sub {
         # handle drawing objects here
     }
 );

 # finally, start the app run loop with the added handlers
 $app->run();

For a full explanation of the L<run|SDLx::Controller/run> loop and other Controller related methods,
please see L<SDLx::Controller>.

=head1 DESCRIPTION

The C<SDLx::App> provides methods for the root window of your SDL application,
as well as many related convenience methods.
It is a subclass of both L<SDLx::Surface> and L<SDLx::Controller>,
providing all the methods they both provide.

=head1 METHODS

=head2 new

C<SDLx::App::new> initializes the SDL, creates a new screen,
and initializes some of the window manager properties.
C<SDLx::App::new> takes a series of named parameters:

=over 4

=item * title
the window title. Defaults to the file name. Shorter alias: 't'

=item * icon_title
the icon title. Defaults to file name. Shortcut: 'it'

=item * icon
the icon itself. Defaults to none. Shortcut: 'i'

=item * width
Window width, in pixels. Defaults to 640. Shortcut: 'w'

=item * height
Window height, in pixels. Defaults to 480. Shortcut: 'h'

=item * depth
Screen depth. Defaults to 16. Shortcut: 'd'.

=item * flags
Any flags you want to pass to L<SDL::Video> upon initialization. Defaults to SDL_ANYFORMAT.
Flags should be I<or'ed> together if you're passing more than one (flags => FOO|BAR). Shortcut: 'f'.

=item * resizeable
Set this to a true value to make the window resizeable by the user. Default is off.

=item * exit_on_quit
Set this to a true value to make the app exit if a SDL_QUIT event is triggered. Shortcut: 'eoq'.

=back

=head1 METHODS

=head2 title()

=head2 title( $new_title )

=head2 title( $window_title, $icon_title )

C<SDLx::App::title> takes 0, 1, or 2 arguments. If no parameter is given,
it returns the current application window title. If one parameter is
passed, both the window title and icon title will be set to its value.
If two parameters are passed the window title will be set to the first,
and the icon title to the second.

=head2 error

C<SDLx::App::error> returns the last error message set by the SDL.

=head2 resize( $width, $height )

C<SDLx::App::resize> takes a new width and height of the application. Only
works if the application was originally created with the resizable option.

=head2 fullscreen

C<SDLx::App::fullscreen> toggles the application in and out of fullscreen mode.

=head2 iconify

C<SDLx::App::iconify> iconifies the application window.

=head2 grab_input( $CONSTANT )

C<SDLx::App::grab_input> can be used to change the input focus behavior of
the application. It takes one argument, which should be one of the following:

=over 4

=item * SDL_GRAB_QUERY

=item * SDL_GRAB_ON

=item * SDL_GRAB_OFF

=back

=head2 sync

C<SDLx::App::sync> encapsulates the various methods of syncronizing the screen with the
current video buffer. C<SDLx::App::sync> will do a fullscreen update, using the double buffer
or OpenGL buffer if applicable. This is prefered to calling flip on the application window.

=head2 attribute( $attr )

=head2 attribute( $attr, $value )

C<SDLx::App::attribute> allows one to get and set GL attributes. By passing a value
in addition to the attribute selector, the value will be set. C<SDL:::App::attribute>
always returns the current value of the given attribute, or Carp::confesss on failure.

=head1 AUTHORS

See L<SDL/AUTHORS>.

=head1 SEE ALSO

L<SDLx::Controller>, L<SDLx::Surface>, L<SDL::Video>, L<SDL::Event>, L<SDL::Mouse>, L<SDL::OpenGL>

=cut
